{"version":3,"sources":["+listBills.js","+orgChart.js","+totalsChart.js","+treeChart.js","+yearChart.js","+custom.js"],"names":["imgerror","image","style","display","sortCounts","objects","sortable","object","push","sort","a","b","switchGunBills","year","$","empty","billURL","subjects","text","getJSON","done","data","getPercentage","total","val","pct","Math","round","numberOfBills","statusArray","sponsorArray","partyArray","lobbiedArray","groupsArray","html","each","k","v","status","billDate","Date","parse","introduced","lobbied","sponsor","party","billNumberArray","number","split","toUpperCase","dateArray","monthNames","parseInt","title","purpose","join","key","last_name","govtrack_id","first_name","state","in_office","countObj","govtrack","append","$divs","dateOrderedDivs","attr","subjectCounts","_","countBy","subjectList","groupCounts","groupList","partyCounts","partyList","click","console","log","this","selected","toggleClass","hide","find","show","statusCounts","lobbiedCounts","sponsorCounts","obj","maxLobbiedCount","barClass","inArray","gunControlGroups","maxStatusCount","maxPartyCount","buildOrgChart","orgMargin","left","right","top","bottom","width","height","d3","csvParse","max","d","minDate","min","maxDate","x","scaleLinear","domain","range","y","xAxis","axisBottom","tickFormat","format","yAxis","axisLeft","orgSvg","select","orgGroup","call","series","columns","slice","map","value","serie","selectAll","enter","line","defined","filter","buildTotalsChart","gunControlTotals","gunRightsTotal","grTotalPct","css","buildTreeChart","csvData","draw","leaves","id","rawGroup","group","substring","lastIndexOf","x0","y0","x1","y1","splitArray","gunColors","on","switchData","toString","length","root","stratify","sum","treemap","scaleOrdinal","parentId","size","padding","firstYear","buildYearChart","yearChartSVG","margin","scaleBand","rangeRound","align","Year","nice","z","stack","categories","ticks","tickSize","pop","keys","bandwidth","legend","reverse","i","gunRightsGroups","document","ready","heroHeight","window","resize","removeClass","addClass","slideUp","slideDown","fadeOut","fadeIn","gunMoney","startYear","endYear","gunControlAnnuals","gunRightsAnnuals","gunOrgs","yearData","gunControl","spending","gunRights","index","name","uniqBy","gunOrgCounts","orgArray","csvOrgData","yearArray","group1header","group2header","ind","orgIndex","expenditures","mainYear","forEach","getFullYear"],"mappings":"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","file":"scripts-bundle.js","sourcesContent":["//Hide any image that throws a 404\nfunction imgerror(image) {\n    image.style.display = 'none';\n}\n\n//Sort counts for objects\nfunction sortCounts(objects) {\n    var sortable = [];\n    for (var object in objects)\n        sortable.push([object, objects[object]]);\n    sortable.sort(\n        function(a, b) {\n            return b[1] - a[1];\n        }\n    );\n    return sortable;\n}\n\n//Switch gun bill info based on year\nfunction switchGunBills(year) {\n    //Clear out content\n    $('#bill-list').empty();\n\n    //Set data urls in one place\n    var billURL = \"data/gunBills\" + year + \".json\";\n    //var sponsorsURL = \"data/gunSponsors.json\";\n\n    //To hold parsed sponsor data\n    var sponsors = {};\n\n    //We're going to count who sponsored the most\n    var totalRepublicans = 0;\n    var totalDemocrats = 0;\n    var totalOther = 0;\n\n    //We're going to count by subject\n    var subjects = [];\n\n    //Stick year on end of heads\n    $(\".head-year\").text(year);\n\n    //Get bill information\n    $.getJSON(billURL).done(function(data) {\n\n        //Holds number fo bills\n        var numberOfBills = 0;\n        //Hold counts for each status\n        var statusArray = [];\n        //Hold counts for each sponsor\n        var sponsorArray = [];\n        //Hold counts for each party\n        var partyArray = [];\n        //Hold counts for each group\n        var lobbiedArray = [];\n        //Hold counts for each sponsor\n        var groupsArray = [];\n        //Hold counts for each subject\n        var subjectsArray = [];\n\n        //Reset list div\n        $('#bill-list').html(\"\")\n\n        $(\"#bill-groups\").empty().html(\"<strong>Groups:</strong><br/>\");\n        $(\"#bill-parties\").empty().html(\"<strong>Party:</strong><br/>\");\n        $(\"#bill-statuses\").empty().html(\"<strong>Status:</strong><br/>\");\n        $(\"#bill-tags\").empty().html(\"<strong>Tags:</strong><br/>\");\n\n        $.each(data, function(k, v) {\n            if (v[\"subjects-top-term\"] != \"Native Americans\" && v[\"subjects-top-term\"] != \"Animals\" && v[\"subjects-top-term\"] != \"Agriculture and food\" && v[\"subjects-top-term\"] != \"Economics and public finance\" && v[\"subjects-top-term\"] != \"Education\" && v[\"subjects-top-term\"] != \"Energy\" && v[\"subjects-top-term\"] != \"Labor and employment\" && v[\"subjects-top-term\"] != \"Private legislation\" && v[\"subjects-top-term\"] != \"Water resources development\") {\n\n                //Increment totals\n                numberOfBills++;\n                statusArray.push(v.status);\n                //sponsorArray.push(v.sponsor.first_name+\" \"+v.sponsor.last_name);\n\n                var billDate = Date.parse(v.introduced);\n\n                var html = \"\";\n                html += \"<div data-date='\" + billDate + \"'data-tag='\" + v[\"subjects-top-term\"] + \"' data-groups='\"+ v.lobbied+\"'  data-party='\"+v.sponsor.party+\"' class='bill'>\";\n\n                //Bill number\n                billNumberArray = v.number.split(\"-\");\n                html += \"     <span class='bill-header bill-number'>\" + billNumberArray[0].toUpperCase() + \"</span>\";\n\n                //Date introduced\n                var dateArray = v.introduced.split(\"-\");\n                html += \"     <span class='bill-header bill-date'>\" + monthNames[(parseInt(dateArray[1]) - 1)] + \" \" + dateArray[2] + \", \" + dateArray[0] + \"</span>\";\n\n                //Bill subject used for tagging\n                html += \"     <span class='bill-tag'>\" + v[\"subjects-top-term\"] + \"</span>\";\n                subjects.push(v[\"subjects-top-term\"]);\n\n                //Short title if available\n                if (v[\"short-title\"]) {\n                    html += \"     <p class='bill-name'>\" + v[\"short-title\"] + \"</p>\";\n                } else {\n                    html += \"     <p class='bill-name'>\" + v.title + \"</p>\";\n                }\n\n                //Purpose if available\n                if (v.purpose != \"null\") {\n                    html += \"<p class='bill-purpose'>\" + v.purpose + \"</p>\";\n                } else {\n                    html += \"<p class='bill-purpose'>No purpose specified</p>\";\n                }\n                //Bill status\n                html += \"     <span class='bill-status'><strong>Status: </strong>\" + v.status.join(\" => \") + \"</span>\";\n\n                // Lobbied list\n                //console.log(v.lobbied);\n                $.each(v.lobbied, function (key,val){\n                    lobbiedArray.push(val);\n                    groupsArray.push(val);\n               });\n                html += \"     <span class='sponsor-lobbied'><strong>Lobbied by: </strong> \" + v.lobbied.join(', ') + \"</span>\";\n\n\n                //Bill sponsor\n                if (v.sponsor.last_name) {\n\n                    //Sponsor party\n                    if (v.sponsor.party === \"R\"){\n                        html += \"     <div class='bill-sponsor republican'>\";\n                    } else if (v.sponsor.party === \"D\"){\n                        html += \"     <div class='bill-sponsor democrat'>\";\n                    }\n\n                    html += \"     <strong>Sponsor</strong>\";\n\n                    //If govtrack then we have a photo\n                    if( v.sponsor.govtrack_id ){\n                        //Sponsor mug\n                        html += \"     <div class='mugBox clearFix\";\n                        if (v.sponsor.party === \"R\"){\n                            html += \" mugBoxR \";\n                        } else if (v.sponsor.party === \"D\"){\n                            html += \" mugBoxD \";\n                        }\n                         html += \"'><img class='bill-mug' src='https://www.govtrack.us/data/photos/\" + v.sponsor.govtrack_id + \"-100px.jpeg'/></div>\";\n                    }\n\n\n                    //Hold parties for counting\n                    partyArray.push(v.sponsor.party);\n\n                    html += \"          <span class='sponsor-name'>\" + v.sponsor.title + \". \" + v.sponsor.first_name + \" \" + v.sponsor.last_name + \" (\" + v.sponsor.party + \"-\" + v.sponsor.state + \")</span>\";\n                    //Sponsor status\n                    if (v.sponsor.in_office === true) {\n                        html += \"<span class='sponsor-status'>Status: In office</span>\";\n                    } else {\n                        html += \"<span class='sponsor-status'>Status: Out of office</span>\";\n                    }\n\n                    html += \"     </div>\";\n\n                    var countObj = {};\n                    countObj.party = v.sponsor.party;\n                    countObj.govtrack = v.sponsor.govtrack_id;\n                    countObj.last_name = v.sponsor.last_name;\n                    countObj.first_name = v.sponsor.first_name;\n                    countObj.in_office = v.sponsor.in_office;\n                    sponsorArray.push(countObj);\n\n\n                } else {\n                    html += \"     <div class='bill-sponsor'>\";\n                    html += \"     <strong>Sponsor</strong>\";\n                    html += \"          <span class='sponsor-name'>No sponsor information available</span>\";\n                    html += \"     </div>\";\n                }\n\n\n                html += \"</div>\";\n\n                $('#bill-list').append(html);\n            }\n\n        });\n        $divs = $(\".bill\");\n\n        var dateOrderedDivs = $divs.sort(function(a, b) {\n            return $(a).attr(\"data-date\") - $(b).attr(\"data-date\");\n        });\n        $(\"#bill-list\").html(dateOrderedDivs);\n\n\n        //Build, display and activate subject tags\n        var subjectCounts = _.countBy(subjects);\n        //console.log(subjectCounts);\n\n        var subjectList = [];\n        $.each(subjectCounts, function(key, val) {\n            subjectList.push(key);\n        });\n        subjectList.sort();\n        $.each(subjectList, function(key, val) {\n            $(\"#bill-tags\").append(\"<span class='tag' data-tag='\" + val + \"'>\" + val + \"</span>\");\n        });\n\n\n        //Build, display and activate subject tags\n        var groupCounts = _.countBy(groupsArray);\n        //console.log(groupCounts);\n\n        var groupList = [];\n        $.each(groupCounts, function(key, val) {\n            groupList.push(key);\n        });\n        groupList.sort();\n        $.each(groupList, function(key, val) {\n            $(\"#bill-groups\").append(\"<span class='tag' data-group='\" + val + \"'>\" + val + \"</span>\");\n        });\n\n        //Build, display and activate subject tags\n        //console.log(partyArray);\n        var partyCounts = _.countBy(partyArray);\n        //console.log(partyCounts);\n\n        var partyList = [];\n        $.each(partyCounts, function(key, val) {\n            partyList.push(key);\n        });\n        partyList.sort();\n        $.each(partyList, function(key, val) {\n            $(\"#bill-parties\").append(\"<span class='tag' data-party='\" + val + \"'>\" + val + \"</span>\");\n        });\n\n        $(\".tag\").click(function() {\n\n            console.log(\"Clicked a tag.\")\n            //IF ITS A TAG BUTTON\n            if ( $(this).data(\"tag\") ){\n                var selected = $(this).data(\"tag\");\n                $(this).toggleClass(\"selected-tag\");\n                $(\".bill\").hide();\n                $('#bill-list').find(\"[data-tag='\" + selected + \"']\").toggleClass(\"selected-tag\");\n                $(\".selected-tag\").show();\n            };\n            //IF ITS A PARTY BUTTON\n            if ( $(this).data(\"party\") ){\n                console.log($(this).data(\"party\"));\n                var selected = $(this).data(\"party\");\n                $(this).toggleClass(\"selected-tag\");\n                $(\".bill\").hide();\n                $('#bill-list').find(\"[data-party='\" + selected + \"']\").toggleClass(\"selected-tag\");\n                $(\".selected-tag\").show();\n            };\n            //IF ITS A GROUP BUTTON\n            if ( $(this).data(\"group\") ){\n                console.log($(this).data(\"group\"));\n                var selected = $(this).data(\"group\");\n                $(this).toggleClass(\"selected-tag\");\n                $(\".bill\").hide();\n\n                $('#bill-list').find(\"[data-groups*='\" + selected + \"']\").toggleClass(\"selected-tag\");\n\n                $(\".selected-tag\").show();\n            };\n\n\n\n        });\n\n\n\n        //Do counts\n        //STATUS COUNTS\n        statusCounts = _.countBy(statusArray);\n        //console.log(statusCounts);\n\n        //ORG COUNTS\n        lobbiedCounts = _.countBy(lobbiedArray);\n        //console.log(lobbiedCounts);\n\n        //SPONSOR COUNTS\n        sponsorCounts = _.countBy(sponsorArray, function(obj){\n            return obj.last_name;\n        });\n\n        //console.log(sponsorCounts);\n\n        // //Get top 3 sponsors\n        // sponsorCountsArray = sortable.slice(0, 3);\n        // console.log(sponsorCountsArray);\n\n        statusCounts = sortCounts(statusCounts);\n        partyCounts = sortCounts(partyCounts);\n        lobbiedCounts = sortCounts(lobbiedCounts);\n        sponsorCounts = sortCounts(sponsorCounts);\n\n        //console.log(lobbiedCounts);\n        //console.log(statusCounts);\n        //console.log(partyCounts);\n        //console.log(sponsorCounts);\n\n        function getPercentage(total,val){\n            pct = val/total*100;\n            if (pct>95){\n                return 95;\n            } else {\n                return Math.round(pct);\n            }\n        }\n\n\n        $(\".byOrg\").empty().html(\"<h3>Organizations and the number of bills they lobbied</h3>\");\n        var lobbiedTotal;\n        // $.each(lobbiedCounts, function(k, v) {\n        //     console.log(parseInt(v[1]));\n        // });\n        var maxLobbiedCount = lobbiedCounts[0][1]\n        $.each(lobbiedCounts, function(k, v) {\n            var barClass;\n             html = \"<div class='list-element'>\";\n             if ($.inArray(v[0], gunControlGroups) >= 0){\n                barClass = \"gc\";\n             } else {\n                barClass = \"gr\";\n             }\n             html += \"     <span class='list-item'>\"+v[0]+\"</span>\";\n             html += \"     <div class='bar-container'>\";\n             html += \"          <div class='list-bar \"+barClass+\"' style='width:\"+getPercentage(maxLobbiedCount,v[1])+\"%'>&nbsp;</div><div class='bar-number'>\"+v[1]+\"</div>\";\n             html += \"     </div>\";\n             html += \"</div>\";\n            $(\".byOrg\").append(html);\n        });\n\n\n        // $(\".bySponsor\").empty().html(\"<h3>The top five sponsors of gun-related legislation</h3>\");\n        // for ( i=1; i<=5; i++){\n        //     if ( sponsorCounts[i][0] ){\n        //         //console.log(i);\n        //         html = \"<li>\"+sponsorCounts[i][0]+\": \" + sponsorCounts[i][1] + \" pieces of legislation.</li>\";\n        //         $(\".bySponsor\").append(html);\n        //     } else {\n        //         //console.log(i);\n        //     }\n        // }\n\n        $(\".byStatus\").empty().html(\"<h3>Status breakdown of introduced gun-related legislation</h3>\");\n        var statusTotal;\n        var maxStatusCount = statusCounts[0][1];\n        $.each(statusCounts, function(k, v) {\n            html = \"<div class='list-element'>\";\n            html += \"     <span class='list-item'>\"+v[0]+\"</span>\";\n            html += \"     <div class='bar-container'>\";\n            html += \"          <div class='list-bar' style='width:\"+getPercentage(maxStatusCount,v[1])+\"%;background:#BF531B'>&nbsp;</div><div class='bar-number'>\"+v[1]+\"</div>\";\n            html += \"     </div>\";\n            html += \"</div>\";\n            $(\".byStatus\").append(html);\n        });\n\n        $(\".byParty\").empty().html(\"<h3> Gun-related legislation introduced by party</h3>\");\n        var partyTotal;\n        var maxPartyCount = partyCounts[0][1]\n\n        $.each(partyCounts, function(k, v) {\n            //console.log(v);\n            html = \"<div class='list-element'>\";\n            //console.log(v[0]);\n            switch (v[0]){\n                case \"R\":\n                    html += \"     <span class='list-item'>Republican</span>\";\n                    break;\n                case \"D\":\n                    html += \"     <span class='list-item'>Democrat</span>\";\n                    break;\n                case \"I\":\n                    html += \"     <span class='list-item'>Independent</span>\";\n                    break;\n                default:\n                    html += \"     <span class='list-item'>Other</span>\";\n                    break;\n            }\n\n            html += \"<div class='bar-container'>\";\n\n            switch (v[0]){\n                case \"R\":\n                    html += \"<div class='list-bar republican' style='width:\"+getPercentage(maxPartyCount,v[1])+\"%'>&nbsp;</div><div class='bar-number'>\"+v[1]+\"</div>\";\n                    break;\n                case \"D\":\n                    html += \"<div class='list-bar democrat' style='width:\"+getPercentage(maxPartyCount,v[1])+\"%'>&nbsp;</div><div class='bar-number'>\"+v[1]+\"</div>\";\n                    break;\n                default:\n                    html += \"<div class='list-bar \"+v[0]+\"' style='width:\"+getPercentage(maxPartyCount,v[1])+\"%'>&nbsp;</div><div class='bar-number'>\"+v[1]+\"</div>\";\n                    break;\n            }\n\n\n            html += \"     </div>\";\n            html += \"</div>\";\n            $(\".byParty\").append(html);\n        });\n\n\n    });\n}\n","function buildOrgChart(data) {\n    console.log(\"--------------   In buildOrgChart()  --------------\");\n    //console.log(data);\n    var gunColors = [\"#4295DE\", \"#D8322A\"];\n    /*\n    ----------------------------------------\n          INITIALIZE THE SVG CONTAINER\n    ----------------------------------------\n    */\n\n    var orgMargin = {left:50,right:50,top:40,bottom:40};\n    var width = $(\"#orgChart\").width();\n    var height = 500;\n\n    //Parse csv into array of objects\n    var data = d3.csvParse(data);\n    //console.log(data);\n    var max = d3.max(data,function(d){ return parseInt(d[\"Violence Policy Center\"])});\n    var minDate = d3.min(data,function(d){return parseInt(d.year);})\n    var maxDate = d3.max(data,function(d){return parseInt(d.year);})\n    var x = d3.scaleLinear()\n        .domain([minDate,maxDate])\n        .range([0,width]);\n    var y = d3.scaleLinear()\n        .domain([0,max])\n        .range([height,0]);\n    var xAxis = d3.axisBottom(x)\n        .tickFormat(d3.format(\"\"));\n    var yAxis = d3.axisLeft(y)\n        .tickFormat(d3.format(\".2s\"));\n\n    var orgSvg = d3.select(\"#orgChart\")\n        .append(\"svg\")\n            .attr(\"height\",height+orgMargin.bottom)\n            .attr(\"width\",width);\n\n    var orgGroup = orgSvg.append(\"g\")\n        .attr(\"transform\",\"translate(\"+orgMargin.left+\",10)\")\n\n    orgGroup.append(\"g\").attr(\"class\",\"x axis\").attr(\"transform\",\"translate(0,\"+height+\")\").call(xAxis);\n    orgGroup.append(\"g\").attr(\"class\",\"y axis\").call(yAxis);\n\n    var series = data.columns.slice(1).map(function(key) {\n        return data.map(function(d) {\n            return {\n                key: key,\n                year: d.year,\n                value: d[key]\n            };\n        });\n    });\n\n    //console.log(series);\n\n\n    var serie = orgGroup.selectAll(\".serie\")\n        .data(series)\n        .enter().append(\"g\")\n        .attr(\"class\", \"serie\");\n\n    serie.append(\"path\")\n        .attr(\"class\", \"line\")\n        .style(\"stroke\", function(d) { return d[0].key; })\n        .attr(\"d\", d3.line()\n        .x(function(d) { return y(d.year); })\n        .y(function(d) { return y(d.value); }));\n\n    var line = d3.line()\n        .defined(function(d) { //console.log(d);\n            if (d.value>0)return d; })\n        .y(function(d){return y(d.value);})\n        .x(function(d){return x(d.year)});\n\n    orgGroup.append(\"path\").attr(\"d\",line(data));\n\n    orgGroup.selectAll(\".dot\")\n        .data(data.filter(function(d) { if (d[\"Violence Policy Center\"]>0)return d; }))\n        .enter().append(\"circle\")\n        .attr(\"class\", \"dot\")\n        .attr(\"cx\", line.x())\n        .attr(\"cy\", line.y())\n        .attr(\"r\", 7);\n\n}\n","function buildTotalsChart(gunControlTotals, gunRightsTotal) {\n\n  console.log(\"--------------   In buildTotalsChart()  --------------\");\n  //console.log(\"gunControlTotals: \" + gunControlTotals);\n  //console.log(\"gunRightsTotal: \" + gunRightsTotal);\n\n  /*\n  <div class=\"bar\" id=\"grTotals\"></div>\n  <div class=\"bar\" id=\"gcTotals\"></div>\n  */\n\n  var total = gunControlTotals + gunRightsTotal;\n  var grTotalPct = Math.round(gunRightsTotal / total * 100);\n  //console.log(grTotalPct + \"%\");\n  $(\"#grBar\").css(\"width\", grTotalPct + \"%\");\n  $(\"#gcBar\").css(\"width\", 100-grTotalPct + \"%\");\n\n}\n","function buildTreeChart(csvData) {\n\n    // Define the div for the tooltip\n    var div = d3.select(\"body\").append(\"div\")\n        .attr(\"class\", \"tooltip\")\n        .style(\"opacity\", 0);\n\n    function type(d) {\n        d.value = +d.value;\n        return d;\n    }\n\n    console.log(\"--------------   In buildTreeChart()  --------------\");\n\n    //console.log(csvData);\n\n    var width = $(\"#treeChart\").width();\n    var height = 500;\n\n    var gunColors = [\"#88C5F2\", \"#E3C357\"];\n\n    //var format = d3.format(\",d\");\n    var format = d3.format(\",.0f\");\n\n    var color = d3.scaleOrdinal()\n        .domain([\"gc\", \"gr\"])\n        .range(gunColors);\n\n    var stratify = d3.stratify()\n        .parentId(function(d) {\n            return d.id.substring(0, d.id.lastIndexOf(\".\"));\n        });\n\n    var treemap = d3.treemap()\n        .size([width, height])\n        .padding(1)\n        .round(true);\n\n    var data = d3.csvParse(csvData, function(d) {\n        var splitArray = d.id.split(\".\");\n        if (splitArray[1] === firstYear || splitArray.length == 1) {\n            return {\n                id: d.id, // lowercase\n                value: +d.value // lowercase\n            };\n        }\n    });\n\n    //console.log(data);\n\n    var root = stratify(data)\n        .sum(function(d) {\n            return d.value;\n        })\n        .sort(function(a, b) {\n            return b.height - a.height || b.value - a.value;\n        });\n\n    //console.log(root);\n\n    treemap(root);\n\n    function draw(data) {\n        $(\"#treeChart\").empty();\n        d3.select(\"#treeChart\")\n            .selectAll(\".node\")\n            .data(data.leaves())\n            .enter().append(\"div\")\n            .attr(\"class\", \"node\")\n            .attr(\"group\", function(d) {\n                var title = d.id;\n                var rawGroup = title.split(/\\r?\\n|\\r/);\n                var group = rawGroup[0].substring(rawGroup[0].lastIndexOf(\".\") + 1)\n                return group;\n            })\n            .attr(\"expenditure\", function(d) {\n                return d.value;\n            })\n            .style(\"left\", function(d) {\n                return d.x0 + \"px\";\n            })\n            .style(\"top\", function(d) {\n                return d.y0 + \"px\";\n            })\n            .style(\"width\", function(d) {\n                return d.x1 - d.x0 + \"px\";\n            })\n            .style(\"height\", function(d) {\n                return d.y1 - d.y0 + \"px\";\n            })\n            .style(\"background\", function(d) {\n                var splitArray = d.id.split(\".\");\n                if (splitArray[2] === \"gr\") {\n                    return gunColors[1];\n                } else {\n                    return gunColors[0];\n                }\n            })\n            .on(\"mouseover\", function(d) {\n                console.log(\"mouseover\");\n                var html = \"<span class='callout-label'>\"+$(this).attr('group')+\"</span>\";\n                    html += \"$\"+ format($(this).attr('expenditure'));\n                $(\"#callout-treemap\").html(html).show()\n\n            })\n            .on(\"mouseout\", function() {\n                console.log(\"mouseout\");\n                $(\"#callout-treemap\").hide();\n\n\n            })\n            .append(\"div\")\n            .attr(\"class\", \"node-label\")\n            .text(function(d) {\n                var width = d.x1 - d.x0;\n                var height = d.y1 - d.y0;\n                if (width >= 80 && height >= 80) {\n                    return d.id.substring(d.id.lastIndexOf(\".\") + 1).split(/(?=[A-Z][^A-Z])/g).join(\"\\n\");\n                }\n\n            })\n            .append(\"div\")\n            .attr(\"class\", \"node-value\")\n            .text(function(d) {\n                var width = d.x1 - d.x0;\n                var height = d.y1 - d.y0;\n                if (width >= 80 && height >= 80) {\n                    return \"$\" + format(d.value);\n                }\n            });\n    }\n\n    draw(root);\n\n    function switchData(year) {\n        console.log(\"switchData(\" + year + \")\");\n\n        var data = d3.csvParse(csvData, function(d) {\n            var splitArray = d.id.split(\".\");\n            if (splitArray[1] === year.toString() || splitArray.length == 1) {\n                return {\n                    id: d.id, // lowercase\n                    value: +d.value // lowercase\n                };\n            }\n        });\n        console.log(data);\n\n        var root = stratify(data)\n            .sum(function(d) {\n                return d.value;\n            })\n            .sort(function(a, b) {\n                return b.height - a.height || b.value - a.value;\n            });\n        console.log(root);\n\n        treemap(root);\n        draw(root);\n\n    }\n\n    switchGunBills(firstYear);\n\n    //$(\"#yearSelector\").change(function () {\n    //var year = $(\"#yearSelector\").val();\n    $(\".year-list li\").click(function() {\n        var year = $(this).data(\"selectedyear\");\n        switchData(year);\n        switchGunBills(year);\n        console.log(year);\n    });\n\n\n}\n","function buildYearChart(data) {\n\n  console.log(\"--------------   In buildYearChart()  --------------\");\n  //console.log(data);\n\n  var width = $(\"#yearChart\").width();\n  var height = 500;\n\n  var gunColors = [\"#88C5F2\", \"#E3C357\"];\n\n  /*\n  ----------------------------------------\n        INITIALIZE THE SVG CONTAINER\n  ----------------------------------------\n  */\n\n  var yearChartSVG = d3.select(\"#yearChart\").append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n  var margin = {\n    top: 5,\n    right: 0,\n    bottom: 17,\n    left: 25\n  };\n  width = width - margin.left - margin.right;\n  height = height - margin.top - margin.bottom;\n  group = yearChartSVG.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n  /* RANGES AND DOMAINS\n  ----------------------------------------\n                  X\n  ----------------------------------------\n  */ //Set the X range from 0 - width of div\n  var x = d3.scaleBand()\n    .rangeRound([0, width])\n    .padding(0.1)\n    .align(0.1);\n\n  //Set the X domain to the \"Year\" attribute\n  x.domain(data.map(function (d) {\n    return d.Year;\n  }));\n\n\n  /*\n  ----------------------------------------\n                  Y\n  ----------------------------------------\n  */ //Set the Y range from 0 - width of div\n  var y = d3.scaleLinear()\n    .rangeRound([height, 0]);\n\n  //Set the Y domain to the \"Total\" attribute\n  y.domain([0, d3.max(data, function (d) {\n    return d.total;\n  })]).nice();\n\n  /*\n  ----------------------------------------\n                  Z\n  ----------------------------------------\n  */ //Set the Z range which looks like color bars\n  var z = d3.scaleOrdinal()\n    .range([gunColors[0], gunColors[1]]);\n\n  //Set the Z domain or color key\n  z.domain([\"Gun Control\", \"Gun Rights\"]);\n\n  /*\n  ----------------------------------------\n                   Stack\n  ----------------------------------------\n  */ //sets the stack generator to \"stack\"\n  var stack = d3.stack();\n\n  /*\n  ----------------------------------------\n          Define the categories\n  ----------------------------------------\n  */ //Since the json has other attributes, manually set the ones to chart\n\n  var categories = [\"Gun Control\", \"Gun Rights\"];\n\n  group.append(\"g\")\n    .attr(\"class\", \"axis axis--x\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(d3.axisBottom(x));\n\n  group.append(\"g\")\n    .attr(\"class\", \"axis axis--y\")\n    .call(d3.axisLeft(y).ticks(10, \"s\").tickSize(width*-1))\n    .append(\"text\")\n    .attr(\"x\", 2)\n    .attr(\"y\", y(y.ticks(10).pop()))\n    .attr(\"dy\", \"0.35em\")\n\n\n  group.selectAll(\".serie\")\n    .data(stack.keys(categories)(data))\n    .enter().append(\"g\")\n    .attr(\"class\", \"serie\")\n    .attr(\"fill\", function (d) {\n      return z(d.key);\n    })\n    .selectAll(\"rect\")\n    .data(function (d) {\n      return d;\n    })\n    .enter().append(\"rect\")\n    .attr(\"x\", function (d) {\n      return x(d.data.Year);\n    })\n    .attr(\"y\", function (d) {\n      return y(d[1]);\n    })\n    .attr(\"height\", function (d) {\n      return y(d[0]) - y(d[1]);\n    })\n    .attr(\"width\", x.bandwidth());\n\n\n\n  /*\n  ----------------------------------------\n        Add the legend\n  ----------------------------------------\n  */\n  var legend = group.selectAll(\".legend\")\n    .data(categories.reverse())\n    .enter().append(\"g\")\n    .attr(\"class\", \"legend\")\n    .attr(\"transform\", function (d, i) {\n      return \"translate(0,\" + i * 20 + \")\";\n    })\n    .style(\"font\", \"10px sans-serif\");\n\n  legend.append(\"rect\")\n    .attr(\"x\", 10)\n    .attr(\"y\", 8)\n    .attr(\"width\", 18)\n    .attr(\"height\", 18)\n    .attr(\"fill\", z);\n\n  legend.append(\"text\")\n    .attr(\"x\", 35)\n    .attr(\"y\", 16)\n    .attr(\"dy\", \".35em\")\n    .attr(\"text-anchor\", \"start\")\n    .text(function (d) {\n      return d;\n    });\n\n}\n","    var firstYear = \"2013\";\n    var monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    var gunControlGroups = [];\n    var gunRightsGroups = [];\n\n    $(document).ready(function() {\n\n        $(\"#hero-gr\").hide();\n\n         //Get height of img\n         var heroHeight = $(\"#hero-gc\").height();\n         $(\"#hero\").height(heroHeight);\n\n        $( window ).resize(function() {\n             heroHeight = $(\"#hero-gc\").height();\n             $(\"#hero\").height(heroHeight);\n        });\n\n         //Switch theme button\n         $(\"#button-gc\").click(function(){\n             console.log(\"click\");\n              $(\".gr-back\").removeClass(\"gr-back\").addClass(\"gc-back\");\n              $(\".gr-dark\").removeClass(\"gr-dark\").addClass(\"gc-dark\");\n              $(\"#hero-border.gr\").removeClass(\"gr\").addClass(\"gc\");\n              $(\"#gr-intro\").slideUp(\"slow\",function(){\n                  $(\"#gc-intro\").slideDown(\"slow\");\n              });\n              $(\"#hero-gr\").fadeOut();\n              $(\"#hero-gc\").fadeIn();\n\n         });\n         $(\"#button-gr\").click(function(){\n             console.log(\"click\");\n              $(\".gc-back\").removeClass(\"gc-back\").addClass(\"gr-back\");\n              $(\".gc-dark\").removeClass(\"gc-dark\").addClass(\"gr-dark\");\n              $(\"#hero-border.gc\").removeClass(\"gc\").addClass(\"gr\");\n              $(\"#gc-intro\").slideUp(\"slow\",function(){\n                  $(\"#gr-intro\").slideDown(\"slow\");\n              });\n              $(\"#hero-gc\").fadeOut();\n              $(\"#hero-gr\").fadeIn();\n         });\n\n        $(\".handle\").click(function() {\n            $(this).toggleClass(\"slideRight\");\n            $(\".gun-control\").toggleClass(\"hide-gun-control\");\n            $(\".gun-rights\").toggleClass(\"hide-gun-rights\");\n        });\n\n        var gunMoney = \"data/gunOrgSpending.json\";\n\n        var startYear = 2000;\n        var endYear = 2016;\n\n        var gunControlAnnuals = {};\n        var gunRightsAnnuals = {};\n\n        var indices = [\"Gun Control\", \"Gun Rights\"];\n\n        //Array of unique gun orgs\n        var gunOrgs = [];\n\n        var yearData = [];\n\n        for (i = startYear; i <= endYear; i++) {\n             $(\".year-list\").append(\"<li data-selectedYear=\"+i+\">\"+i+\"</li>\");\n        }\n\n        $.getJSON(gunMoney).done(function(data) {\n\n            // Shortcut to groups\n            var gunControl = data.spending[0].gunControl;\n            var gunRights = data.spending[1].gunRights;\n\n            //Build arrays for each groups\n\n\n            /*---------------------------------------------------------------\n            \t\t\t BUILD ORG FEVERS csv\n            ---------------------------------------------------------------*/\n\n            //Build an array of ALL gun orgs\n            for (i = startYear; i <= endYear; i++) {\n                $.each(gunControl, function(index, value) {\n                    //console.log();\n                    $.each(value, function(index, value) {\n                        gunOrgs.push(value.name);\n                        //Add to group arrays for counting sides\n                        gunControlGroups.push(value.name);\n                    });\n                });\n                $.each(gunRights, function(index, value) {\n                    //console.log();\n                    $.each(value, function(index, value) {\n                        gunOrgs.push(value.name);\n                        //Add to group arrays for counting sides\n                        gunRightsGroups.push(value.name);\n                    });\n                });\n            }\n            gunControlGroups = _.uniqBy(gunControlGroups);\n            gunRightsGroups = _.uniqBy(gunRightsGroups);\n            console.log(gunRightsGroups);\n\n            //GUN ORG COUNTS\n            gunOrgCounts = _.countBy(gunOrgs);\n\n            //Build top line of gun orgs csv\n            //var csvOrgData = \"year,\";\n            var orgArray = [\"year\"];\n            $.each(gunOrgCounts, function(index, value) {\n                //csvOrgData += index+\",\";\n                orgArray.push(index);\n            });\n            var csvOrgData = orgArray + \"\\n\";\n\n\n\n            /*---------------------------------------------------------------\n            \t\t\t BUILD TREE MAP csv\n            ---------------------------------------------------------------*/\n\n            var csvData = \"id,value\\n\";\n            csvData += \"flare,\\n\";\n\n            for (i = startYear; i <= endYear; i++) {\n\n                //FOR GUN ORG CHART\n                yearArray = [i.toString()];\n\n                csvData += \"flare.\" + i.toString() + \",\\n\";\n                var group1header = false;\n                var group2header = false;\n                //console.log(i);\n                $.each(data.spending, function(index, value) {\n                    if (index === 0) {\n                        group = \"gc\";\n                        //console.log(\"     \"+group);\n                        //console.log(value.gunControl[i.toString()]);\n                        if (!group1header) {\n                            //console.log(\"false: \"+group1header);\n                            csvData += \"flare.\" + i.toString() + \".\" + group + \",\\n\";\n                            $.each(value.gunControl[i.toString()], function(ind, val) {\n                                //console.log(val.name);\n\n                                var orgIndex = $.inArray(val.name,orgArray);\n                                if (parseInt(val.expenditures) > 0){\n                                    yearArray[orgIndex] = val.expenditures;\n                                }\n\n                                csvData += \"flare.\" + i.toString() + \".\" + group + \".\" + val.name + \",\" + val.expenditures + \"\\n\";\n                            });\n                            group1header = true;\n                        }\n                    }\n                });\n                $.each(data.spending, function(index, value) {\n                    if (index === 1) {\n                        group = \"gr\";\n                        //console.log(\"     \"+group);\n                        //console.log(value.gunControl[i.toString()]);\n                        if (!group2header) {\n                            //console.log(\"false: \"+group2header);\n                            csvData += \"flare.\" + i.toString() + \".\" + group + \",\\n\";\n                            $.each(value.gunRights[i.toString()], function(ind, val) {\n                                //console.log(val.name);\n\n                                var orgIndex = $.inArray(val.name,orgArray);\n                                if (parseInt(val.expenditures) > 0){\n                                    yearArray[orgIndex] = val.expenditures;\n                                }\n\n\n                                csvData += \"flare.\" + i.toString() + \".\" + group + \".\" + val.name + \",\" + val.expenditures + \"\\n\";\n                            });\n                            group2header = true;\n                        }\n                    }\n                });\n                //console.log(yearArray);\n                csvOrgData += yearArray+\"\\n\";\n            }\n\n\n            /*---------------------------------------------------------------\n                        BUILD YEAR CHART json\n            ---------------------------------------------------------------*/\n\n            // Loop through every year\n            for (i = startYear; i <= endYear; i++) {\n\n                // Blank object to be pushed into yearData for first chart\n                mainYear = {};\n                mainYear.Year = i;\n\n                // Initialize annual totals to 0\n                gunRightsAnnuals[i] = 0;\n                gunControlAnnuals[i] = 0;\n\n                //console.log(\"    Gun Rights\");\n                gunRights[i.toString()].forEach(function(year) {\n                    //console.log(parseInt(year.expenditures));\n                    gunRightsAnnuals[i.toString()] += parseInt(year.expenditures);\n                });\n\n                //console.log(\"    Gun Control\");\n                gunControl[i.toString()].forEach(function(year) {\n                    //console.log(parseInt(year.expenditures));\n                    gunControlAnnuals[i.toString()] += parseInt(year.expenditures);\n                });\n\n\n\n                mainYear[\"Gun Control\"] = gunControlAnnuals[i.toString()];\n                mainYear[\"Gun Rights\"] = gunRightsAnnuals[i.toString()];\n                mainYear.total = parseInt(gunControlAnnuals[i.toString()]) + parseInt(gunRightsAnnuals[i.toString()]);\n\n                yearData.push(mainYear);\n\n            }\n\n            /*---------------------------------------------------------------\n                        BUILD TOTALS CHART\n            ---------------------------------------------------------------*/\n            var gunControlTotals = 0;\n            var gunRightsTotal = 0;\n\n            $.each(yearData, function(key, val) {\n                gunControlTotals += val[\"Gun Control\"];\n                gunRightsTotal += val[\"Gun Rights\"];\n            });\n\n            buildTotalsChart(gunControlTotals, gunRightsTotal);\n            buildYearChart(yearData);\n            buildOrgChart(csvOrgData);\n            buildTreeChart(csvData);\n\n        });\n\n        // injecting current year into footer\n        // DO NOT DELETE\n\n        var d = new Date();\n        var year = d.getFullYear();\n\n        $('.copyright').text(year);\n\n    });\n"]}