{"version":3,"sources":["+listBills.js","+orgChart.js","+totalsChart.js","+treeChart.js","+yearChart.js","+custom.js"],"names":["imgerror","image","style","display","sortCounts","objects","sortable","object","push","sort","a","b","switchGunBills","year","$","empty","billURL","subjects","text","getJSON","done","data","getPercentage","total","val","pct","Math","round","numberOfBills","statusArray","sponsorArray","partyArray","lobbiedArray","html","each","k","v","status","sponsor","first_name","last_name","party","billDate","Date","parse","introduced","billNumberArray","number","split","toUpperCase","dateArray","monthNames","parseInt","title","purpose","join","lobbied","key","govtrack_id","state","in_office","append","$divs","dateOrderedDivs","attr","subjectCounts","_","countBy","subjectList","click","selected","this","toggleClass","hide","console","log","find","show","statusCounts","partyCounts","lobbiedCounts","sponsorCounts","lobbiedTotal","i","statusTotal","partyTotal","buildOrgChart","orgMargin","left","right","top","bottom","width","height","d3","csvParse","max","d","minDate","min","maxDate","x","scaleLinear","domain","range","y","xAxis","axisBottom","tickFormat","format","yAxis","axisLeft","orgSvg","select","orgGroup","call","series","columns","slice","map","value","serie","selectAll","enter","line","defined","filter","buildTotalsChart","gunControlTotals","gunRightsTotal","grTotalPct","css","buildTreeChart","csvData","draw","leaves","id","x0","y0","x1","y1","splitArray","gunColors","substring","lastIndexOf","switchData","length","root","stratify","sum","treemap","scaleOrdinal","parentId","size","padding","firstYear","buildYearChart","yearChartSVG","margin","group","scaleBand","rangeRound","align","Year","nice","z","stack","categories","ticks","tickSize","pop","keys","bandwidth","legend","reverse","document","ready","heroHeight","window","resize","removeClass","addClass","fadeOut","fadeIn","gunMoney","startYear","endYear","gunControlAnnuals","gunRightsAnnuals","gunOrgs","yearData","gunControl","spending","gunRights","index","name","gunOrgCounts","orgArray","csvOrgData","yearArray","toString","group1header","group2header","ind","orgIndex","inArray","expenditures","mainYear","forEach","getFullYear"],"mappings":"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","file":"scripts-bundle.js","sourcesContent":["//Hide any image that throws a 404\nfunction imgerror(image) {\n    image.style.display = 'none';\n}\n\nfunction sortCounts(objects) {\n    var sortable = [];\n    for (var object in objects)\n        sortable.push([object, objects[object]]);\n    sortable.sort(\n        function(a, b) {\n            return b[1] - a[1];\n        }\n    );\n    return sortable;\n}\n\nfunction switchGunBills(year) {\n    //Clear out content\n    $('#bill-list').empty();\n\n    //Set data urls in one place\n    var billURL = \"data/gunBills\" + year + \".json\";\n    //var sponsorsURL = \"data/gunSponsors.json\";\n\n    //To hold parsed sponsor data\n    var sponsors = {};\n\n    //We're going to count who sponsored the most\n    var totalRepublicans = 0;\n    var totalDemocrats = 0;\n    var totalOther = 0;\n\n    //We're going to count by subject\n    var subjects = [];\n\n    //Stick year on end of heads\n    $(\".head-year\").text(year);\n\n    //Get bill information\n    $.getJSON(billURL).done(function(data) {\n\n        //Holds number fo bills\n        var numberOfBills = 0;\n        //Hold counts for each status\n        var statusArray = [];\n        //Hold counts for each sponsor\n        var sponsorArray = [];\n        //Hold counts for each sponsor\n        var partyArray = [];\n        //Hold counts for each sponsor\n        var lobbiedArray = [];\n        //Reset list div\n        $('#bill-list').html(\"\")\n\n        $(\"#bill-tags\").empty().html(\"Tags:<br/>\");\n\n        $.each(data, function(k, v) {\n            if (v[\"subjects-top-term\"] != \"Native Americans\" && v[\"subjects-top-term\"] != \"Animals\" && v[\"subjects-top-term\"] != \"Agriculture and food\" && v[\"subjects-top-term\"] != \"Economics and public finance\" && v[\"subjects-top-term\"] != \"Education\" && v[\"subjects-top-term\"] != \"Energy\" && v[\"subjects-top-term\"] != \"Labor and employment\" && v[\"subjects-top-term\"] != \"Private legislation\" && v[\"subjects-top-term\"] != \"Water resources development\") {\n\n                /*\n                DESCRIPTION OF STATUS\n                https://github.com/unitedstates/congress/wiki/bills\n                */\n\n                //Increment totals\n                numberOfBills++;\n                statusArray.push(v.status);\n                sponsorArray.push(v.sponsor.first_name+\" \"+v.sponsor.last_name);\n                partyArray.push(v.sponsor.party);\n\n\n                // switch (v.status) {\n                //\n                //     case \"ENACTED:SIGNED\":\n                //         status = \"Signed by the President\";\n                //         break;\n                //     case \"FAIL:ORIGINATING:HOUSE\":\n                //         status = \"Failed in originating chamber, the House of Representatives\";\n                //         break;\n                //     case \"PASS_OVER:HOUSE\":\n                //         status = \"Passed in the House and sent to Senate\";\n                //         break;\n                //     case \"PASS_OVER:SENATE\":\n                //         status = \"Passed in the Senate and sent to House\";\n                //         break;\n                //     case \"PASSED:CONCURRENTRES\":\n                //         status = \"Passed in both chambers\";\n                //         break;\n                //     case \"REFERRED\":\n                //         status = \"Referred to committee\";\n                //         break;\n                //     case \"REPORTED\":\n                //         status = \"Awaiting debate in originating chamber\";\n                //         break;\n                //     default:\n                //         status = \"No status issued\";\n                // }\n\n                var billDate = Date.parse(v.introduced);\n\n                var html = \"\";\n                html += \"<div data-date='\" + billDate + \"'data-tag='\" + v[\"subjects-top-term\"] + \"' class='bill'>\";\n\n                //Bill number\n                billNumberArray = v.number.split(\"-\");\n                html += \"     <span class='bill-header bill-number'>\" + billNumberArray[0].toUpperCase() + \"</span>\";\n\n                //Date introduced\n                var dateArray = v.introduced.split(\"-\");\n                html += \"     <span class='bill-header bill-date'>\" + monthNames[(parseInt(dateArray[1]) - 1)] + \" \" + dateArray[2] + \", \" + dateArray[0] + \"</span>\";\n\n                //Bill subject used for tagging\n                html += \"     <span class='bill-tag'>\" + v[\"subjects-top-term\"] + \"</span>\";\n                subjects.push(v[\"subjects-top-term\"]);\n\n                //Short title if available\n                if (v[\"short-title\"]) {\n                    html += \"     <p class='bill-name'>\" + v[\"short-title\"] + \"</p>\";\n                } else {\n                    html += \"     <p class='bill-name'>\" + v.title + \"</p>\";\n                }\n\n                //Purpose if available\n                if (v.purpose != \"null\") {\n                    html += \"<p class='bill-purpose'>\" + v.purpose + \"</p>\";\n                } else {\n                    html += \"<p class='bill-purpose'>No purpose specified</p>\";\n                }\n                //Bill status\n                html += \"     <span class='bill-status'><strong>Status: </strong>\" + v.status.join(\" => \") + \"</span>\";\n\n                // Lobbied list\n                //console.log(v.lobbied);\n                $.each(v.lobbied, function (key,val){\n                    lobbiedArray.push(val);\n               });\n                html += \"     <span class='sponsor-lobbied'><strong>Lobbied by: </strong> \" + v.lobbied.join(', ') + \"</span>\";\n\n                //Bill sponsor\n                if (v.sponsor.last_name) {\n                    html += \"     <div class='bill-sponsor'>\";\n                    html += \"     <strong>Sponsor</strong><br/>\";\n\n                    if( v.sponsor.govtrack_id ){\n                        //Sponsor mug\n                        html += \"     <div class='mugBox \";\n                        if (v.sponsor.party === \"R\"){\n                            html += \" mugBoxR \";\n                        } else if (v.sponsor.party === \"D\"){\n                            html += \" mugBoxD \";\n                        }\n                         html += \"'><img class='bill-mug clearFix' src='https://www.govtrack.us/data/photos/\" + v.sponsor.govtrack_id + \"-100px.jpeg'/></div>\";\n                    }\n                    //Sponsor name\n                    if (v.sponsor.party === \"R\"){\n                        html += \"<span class='circle republican'/>\";\n                    } else if (v.sponsor.party === \"D\"){\n                        html += \"<span class='circle democrat'/>\";\n                    }\n\n                    html += \"          <span class='sponsor-name'>\" + v.sponsor.title + \". \" + v.sponsor.first_name + \" \" + v.sponsor.last_name + \" (\" + v.sponsor.party + \"-\" + v.sponsor.state + \")</span>\";\n                    //Sponsor status\n                    if (v.sponsor.in_office === true) {\n                        html += \"<span class='sponsor-status clearFix'>Status: In office</span>\";\n                    } else {\n                        html += \"<span class='sponsor-status clearFix'>Status: Out of office</span>\";\n                    }\n\n                    html += \"     </div>\";\n                } else {\n                    html += \"     <div class='bill-sponsor'>\";\n                    html += \"     <strong>Sponsor</strong>\";\n                    html += \"          <span class='sponsor-name clearFix'>No sponsor information available</span>\";\n                    html += \"     </div>\";\n                }\n\n\n                html += \"</div>\";\n\n                $('#bill-list').append(html);\n            }\n\n        });\n        $divs = $(\".bill\");\n\n        var dateOrderedDivs = $divs.sort(function(a, b) {\n            return $(a).attr(\"data-date\") - $(b).attr(\"data-date\");\n        });\n        $(\"#bill-list\").html(dateOrderedDivs);\n\n\n        //Build, display and activate subject tags\n        var subjectCounts = _.countBy(subjects);\n        //console.log(subjectCounts);\n\n        var subjectList = [];\n        $.each(subjectCounts, function(key, val) {\n            subjectList.push(key);\n        });\n        subjectList.sort();\n        $.each(subjectList, function(key, val) {\n            $(\"#bill-tags\").append(\"<span class='tag' data-tag='\" + val + \"'>\" + val + \"</span>\");\n        });\n\n\n        $(\".tag\").click(function() {\n            var selected = $(this).data(\"tag\");\n            $(this).toggleClass(\"selected-tag\");\n            $(\".bill\").hide();\n\n            console.log(selected);\n            $('#bill-list').find(\"[data-tag='\" + selected + \"']\").toggleClass(\"selected-tag\");\n            $(\".selected-tag\").show();\n        });\n\n        //Do counts\n        //STATUS COUNTS\n        statusCounts = _.countBy(statusArray);\n        //console.log(statusCounts);\n\n        //PARTY COUNTS\n        partyCounts = _.countBy(partyArray);\n        //console.log(partyCounts);\n\n        //ORG COUNTS\n        lobbiedCounts = _.countBy(lobbiedArray);\n        //console.log(lobbiedCounts);\n\n        //SPONSOR COUNTS\n        sponsorCounts = _.countBy(sponsorArray);\n        //console.log(sponsorCounts);\n\n        // //Get top 3 sponsors\n        // sponsorCountsArray = sortable.slice(0, 3);\n        // console.log(sponsorCountsArray);\n\n        statusCounts = sortCounts(statusCounts);\n        partyCounts = sortCounts(partyCounts);\n        lobbiedCounts = sortCounts(lobbiedCounts);\n        sponsorCounts = sortCounts(sponsorCounts);\n\n        //console.log(lobbiedCounts);\n        //console.log(statusCounts);\n        //console.log(partyCounts);\n        //console.log(sponsorCounts);\n\n        function getPercentage(total,val){\n            pct = val/total*100;\n            if (pct>95){\n                return 95;\n            } else {\n                return Math.round(pct);\n            }\n        }\n\n\n        $(\".byOrg\").empty().html(\"<h3>Organizations and the number of bills they lobbied</h3>\");\n        var lobbiedTotal;\n        $.each(lobbiedCounts, function(k, v) {\n            if (k === 0){\n                lobbiedTotal = 0;\n            }\n            lobbiedTotal += parseInt(v[1]);\n        });\n\n        $.each(lobbiedCounts, function(k, v) {\n             html = \"<div class='list-element'>\";\n             html += \"     <span class='list-item'>\"+v[0]+\"</span>\";\n             html += \"     <div class='bar-container'>\";\n             html += \"          <div class='list-bar' style='width:\"+getPercentage(lobbiedTotal,v[1])+\"%'>&nbsp;</div><div class='bar-number'>\"+v[1]+\"</div>\";\n             html += \"     </div>\";\n             html += \"</div>\";\n            $(\".byOrg\").append(html);\n        });\n\n\n        $(\".bySponsor\").empty().html(\"<h3>The top five sponsors of gun-related legislation</h3>\");\n        for ( i=1; i<=5; i++){\n            if ( sponsorCounts[i][0] ){\n                //console.log(i);\n                html = \"<li>\"+sponsorCounts[i][0]+\": \" + sponsorCounts[i][1] + \" pieces of legislation.</li>\";\n                $(\".bySponsor\").append(html);\n            } else {\n                //console.log(i);\n            }\n        }\n\n        $(\".byStatus\").empty().html(\"<h3>Status breakdown of introduced gun-related legislation</h3>\");\n        var statusTotal;\n        $.each(statusCounts, function(k, v) {\n            if (k === 0){\n                statusTotal = 0;\n            }\n            statusTotal += parseInt(v[1]);\n        });\n        $.each(statusCounts, function(k, v) {\n            html = \"<div class='list-element'>\";\n            html += \"     <span class='list-item'>\"+v[0]+\"</span>\";\n            html += \"     <div class='bar-container'>\";\n            html += \"          <div class='list-bar' style='width:\"+getPercentage(lobbiedTotal,v[1])+\"%;background:#BF531B'>&nbsp;</div><div class='bar-number'>\"+v[1]+\"</div>\";\n            html += \"     </div>\";\n            html += \"</div>\";\n            $(\".byStatus\").append(html);\n        });\n\n        $(\".byParty\").empty().html(\"<h3> Gun-related legislation introduced by party</h3>\");\n        var partyTotal;\n        $.each(partyCounts, function(k, v) {\n            if (k === 0){\n                partyTotal = 0;\n            }\n            partyTotal += parseInt(v[1]);\n        });\n        $.each(partyCounts, function(k, v) {\n            html = \"<div class='list-element'>\";\n            //console.log(v[0]);\n            switch (v[0]){\n                case \"R\":\n                    html += \"     <span class='list-item'>Republican</span>\";\n                    break;\n                case \"D\":\n                    html += \"     <span class='list-item'>Democrat</span>\";\n                    break;\n                case \"I\":\n                    html += \"     <span class='list-item'>Independent</span>\";\n                    break;\n                default:\n                    html += \"     <span class='list-item'>Other</span>\";\n                    break;\n            }\n\n            html += \"<div class='bar-container'>\";\n\n            switch (v[0]){\n                case \"R\":\nhtml += \"          <div class='list-bar republican' style='width:\"+getPercentage(partyTotal,v[1])+\"%'>&nbsp;</div><div class='bar-number'>\"+v[1]+\"</div>\";                    break;\n                case \"D\":\n                    html += \"<div class='list-bar democrat' style='width:\"+getPercentage(partyTotal,v[1])+\"%'>&nbsp;</div><div class='bar-number'>\"+v[1]+\"</div>\";\n                    break;\n\n                default:\n                    html += \"<div class='list-bar \"+v[0]+\"' style='width:\"+getPercentage(partyTotal,v[1])+\"%'>&nbsp;</div><div class='bar-number'>\"+v[1]+\"</div>\";\n                    break;\n            }\n\n\n            html += \"     </div>\";\n            html += \"</div>\";\n            $(\".byParty\").append(html);\n        });\n\n\n    });\n}\n","function buildOrgChart(data) {\n    console.log(\"--------------   In buildOrgChart()  --------------\");\n    //console.log(data);\n    var gunColors = [\"#4295DE\", \"#D8322A\"];\n    /*\n    ----------------------------------------\n          INITIALIZE THE SVG CONTAINER\n    ----------------------------------------\n    */\n\n    var orgMargin = {left:50,right:50,top:40,bottom:40};\n    var width = $(\"#orgChart\").width();\n    var height = 500;\n\n    //Parse csv into array of objects\n    var data = d3.csvParse(data);\n    //console.log(data);\n    var max = d3.max(data,function(d){ return parseInt(d[\"Violence Policy Center\"])});\n    var minDate = d3.min(data,function(d){return parseInt(d.year);})\n    var maxDate = d3.max(data,function(d){return parseInt(d.year);})\n    var x = d3.scaleLinear()\n        .domain([minDate,maxDate])\n        .range([0,width]);\n    var y = d3.scaleLinear()\n        .domain([0,max])\n        .range([height,0]);\n    var xAxis = d3.axisBottom(x)\n        .tickFormat(d3.format(\"\"));\n    var yAxis = d3.axisLeft(y)\n        .tickFormat(d3.format(\".2s\"));\n\n    var orgSvg = d3.select(\"#orgChart\")\n        .append(\"svg\")\n            .attr(\"height\",height+orgMargin.bottom)\n            .attr(\"width\",width);\n\n    var orgGroup = orgSvg.append(\"g\")\n        .attr(\"transform\",\"translate(\"+orgMargin.left+\",10)\")\n\n    orgGroup.append(\"g\").attr(\"class\",\"x axis\").attr(\"transform\",\"translate(0,\"+height+\")\").call(xAxis);\n    orgGroup.append(\"g\").attr(\"class\",\"y axis\").call(yAxis);\n\n    var series = data.columns.slice(1).map(function(key) {\n        return data.map(function(d) {\n            return {\n                key: key,\n                year: d.year,\n                value: d[key]\n            };\n        });\n    });\n\n    //console.log(series);\n\n\n    var serie = orgGroup.selectAll(\".serie\")\n        .data(series)\n        .enter().append(\"g\")\n        .attr(\"class\", \"serie\");\n\n    serie.append(\"path\")\n        .attr(\"class\", \"line\")\n        .style(\"stroke\", function(d) { return d[0].key; })\n        .attr(\"d\", d3.line()\n        .x(function(d) { return y(d.year); })\n        .y(function(d) { return y(d.value); }));\n\n    var line = d3.line()\n        .defined(function(d) { //console.log(d);\n            if (d.value>0)return d; })\n        .y(function(d){return y(d.value);})\n        .x(function(d){return x(d.year)});\n\n    orgGroup.append(\"path\").attr(\"d\",line(data));\n\n    orgGroup.selectAll(\".dot\")\n        .data(data.filter(function(d) { if (d[\"Violence Policy Center\"]>0)return d; }))\n        .enter().append(\"circle\")\n        .attr(\"class\", \"dot\")\n        .attr(\"cx\", line.x())\n        .attr(\"cy\", line.y())\n        .attr(\"r\", 7);\n\n}\n","function buildTotalsChart(gunControlTotals, gunRightsTotal) {\n\n  console.log(\"--------------   In buildTotalsChart()  --------------\");\n  //console.log(\"gunControlTotals: \" + gunControlTotals);\n  //console.log(\"gunRightsTotal: \" + gunRightsTotal);\n\n  /*\n  <div class=\"bar\" id=\"grTotals\"></div>\n  <div class=\"bar\" id=\"gcTotals\"></div>\n  */\n\n  var total = gunControlTotals + gunRightsTotal;\n  var grTotalPct = Math.round(gunRightsTotal / total * 100);\n  //console.log(grTotalPct + \"%\");\n  $(\"#grBar\").css(\"width\", grTotalPct + \"%\");\n  $(\"#gcBar\").css(\"width\", 100-grTotalPct + \"%\");\n\n}\n","function buildTreeChart(csvData) {\n\n  function type(d) {\n    d.value = +d.value;\n    return d;\n  }\n\n  console.log(\"--------------   In buildTreeChart()  --------------\");\n\n  //console.log(csvData);\n\n  var width = $(\"#treeChart\").width();\n  var height = 500;\n\nvar gunColors = [\"#88C5F2\", \"#E3C357\"];\n\n  //var format = d3.format(\",d\");\n  var format = d3.format(\",.0f\");\n\n  var color = d3.scaleOrdinal()\n    .domain([\"gc\", \"gr\"])\n    .range(gunColors);\n\n  var stratify = d3.stratify()\n    .parentId(function (d) {\n      return d.id.substring(0, d.id.lastIndexOf(\".\"));\n    });\n\n  var treemap = d3.treemap()\n    .size([width, height])\n    .padding(1)\n    .round(true);\n\n  var data = d3.csvParse(csvData, function (d) {\n    var splitArray = d.id.split(\".\");\n    if (splitArray[1] === firstYear || splitArray.length == 1) {\n      return {\n        id: d.id, // lowercase\n        value: +d.value // lowercase\n      };\n    }\n  });\n\n  var root = stratify(data)\n    .sum(function (d) {\n      return d.value;\n    })\n    .sort(function (a, b) {\n      return b.height - a.height || b.value - a.value;\n    });\n\n  treemap(root);\n\n  function draw(data) {\n    $(\"#treeChart\").empty();\n    d3.select(\"#treeChart\")\n      .selectAll(\".node\")\n      .data(data.leaves())\n      .enter().append(\"div\")\n      .attr(\"class\", \"node\")\n      .attr(\"title\", function (d) {\n        return d.id + \"\\n\" + format(d.value);\n      })\n      .style(\"left\", function (d) {\n        return d.x0 + \"px\";\n      })\n      .style(\"top\", function (d) {\n        return d.y0 + \"px\";\n      })\n      .style(\"width\", function (d) {\n        return d.x1 - d.x0 + \"px\";\n      })\n      .style(\"height\", function (d) {\n        return d.y1 - d.y0 + \"px\";\n      })\n      .style(\"background\", function (d) {\n        var splitArray = d.id.split(\".\");\n        if (splitArray[2] === \"gr\") {\n          return gunColors[1];\n        } else {\n          return gunColors[0];\n        }\n      })\n      .append(\"div\")\n      .attr(\"class\", \"node-label\")\n      .text(function (d) {\n        var width = d.x1 - d.x0;\n        var height = d.y1 - d.y0;\n        if (width >= 80 && height >= 80) {\n          return d.id.substring(d.id.lastIndexOf(\".\") + 1).split(/(?=[A-Z][^A-Z])/g).join(\"\\n\");\n        }\n\n      })\n      .append(\"div\")\n      .attr(\"class\", \"node-value\")\n      .text(function (d) {\n        var width = d.x1 - d.x0;\n        var height = d.y1 - d.y0;\n        if (width >= 80 && height >= 80) {\n          return \"$\" + format(d.value);\n        }\n      });\n  }\n\n  draw(root);\n\n  function switchData(year) {\n\n    console.log(\"switchData(\" + year + \")\");\n\n    data = d3.csvParse(csvData, function (d) {\n      var splitArray = d.id.split(\".\");\n      if (splitArray[1] === year || splitArray.length == 1) {\n        return {\n          id: d.id, // lowercase\n          value: +d.value // lowercase\n        };\n      }\n    });\n    console.log(data);\n\n    root = stratify(data)\n      .sum(function (d) {\n        return d.value;\n      })\n      .sort(function (a, b) {\n        return b.height - a.height || b.value - a.value;\n      });\n    console.log(root);\n\n    treemap(root);\n\n    draw(root);\n\n  }\n\n  switchGunBills(firstYear);\n\n  //$(\"#yearSelector\").change(function () {\n    //var year = $(\"#yearSelector\").val();\n    $(\".year-list li\").click(function(){\n         var year = $(this).data(\"selectedyear\");\n         switchData(year);\n         switchGunBills(year);\n         console.log(year);\n    });\n\n\n}\n","function buildYearChart(data) {\n\n  console.log(\"--------------   In buildYearChart()  --------------\");\n  //console.log(data);\n\n  var width = $(\"#yearChart\").width();\n  var height = 500;\n\n  var gunColors = [\"#88C5F2\", \"#E3C357\"];\n\n  /*\n  ----------------------------------------\n        INITIALIZE THE SVG CONTAINER\n  ----------------------------------------\n  */\n\n  var yearChartSVG = d3.select(\"#yearChart\").append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n  var margin = {\n    top: 5,\n    right: 0,\n    bottom: 17,\n    left: 25\n  };\n  width = width - margin.left - margin.right;\n  height = height - margin.top - margin.bottom;\n  group = yearChartSVG.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n  /* RANGES AND DOMAINS\n  ----------------------------------------\n                  X\n  ----------------------------------------\n  */ //Set the X range from 0 - width of div\n  var x = d3.scaleBand()\n    .rangeRound([0, width])\n    .padding(0.1)\n    .align(0.1);\n\n  //Set the X domain to the \"Year\" attribute\n  x.domain(data.map(function (d) {\n    return d.Year;\n  }));\n\n\n  /*\n  ----------------------------------------\n                  Y\n  ----------------------------------------\n  */ //Set the Y range from 0 - width of div\n  var y = d3.scaleLinear()\n    .rangeRound([height, 0]);\n\n  //Set the Y domain to the \"Total\" attribute\n  y.domain([0, d3.max(data, function (d) {\n    return d.total;\n  })]).nice();\n\n  /*\n  ----------------------------------------\n                  Z\n  ----------------------------------------\n  */ //Set the Z range which looks like color bars\n  var z = d3.scaleOrdinal()\n    .range([gunColors[0], gunColors[1]]);\n\n  //Set the Z domain or color key\n  z.domain([\"Gun Control\", \"Gun Rights\"]);\n\n  /*\n  ----------------------------------------\n                   Stack\n  ----------------------------------------\n  */ //sets the stack generator to \"stack\"\n  var stack = d3.stack();\n\n  /*\n  ----------------------------------------\n          Define the categories\n  ----------------------------------------\n  */ //Since the json has other attributes, manually set the ones to chart\n\n  var categories = [\"Gun Control\", \"Gun Rights\"];\n\n  group.append(\"g\")\n    .attr(\"class\", \"axis axis--x\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(d3.axisBottom(x));\n\n  group.append(\"g\")\n    .attr(\"class\", \"axis axis--y\")\n    .call(d3.axisLeft(y).ticks(10, \"s\").tickSize(width*-1))\n    .append(\"text\")\n    .attr(\"x\", 2)\n    .attr(\"y\", y(y.ticks(10).pop()))\n    .attr(\"dy\", \"0.35em\")\n\n\n  group.selectAll(\".serie\")\n    .data(stack.keys(categories)(data))\n    .enter().append(\"g\")\n    .attr(\"class\", \"serie\")\n    .attr(\"fill\", function (d) {\n      return z(d.key);\n    })\n    .selectAll(\"rect\")\n    .data(function (d) {\n      return d;\n    })\n    .enter().append(\"rect\")\n    .attr(\"x\", function (d) {\n      return x(d.data.Year);\n    })\n    .attr(\"y\", function (d) {\n      return y(d[1]);\n    })\n    .attr(\"height\", function (d) {\n      return y(d[0]) - y(d[1]);\n    })\n    .attr(\"width\", x.bandwidth());\n\n\n\n  /*\n  ----------------------------------------\n        Add the legend\n  ----------------------------------------\n  */ \n  var legend = group.selectAll(\".legend\")\n    .data(categories.reverse())\n    .enter().append(\"g\")\n    .attr(\"class\", \"legend\")\n    .attr(\"transform\", function (d, i) {\n      return \"translate(0,\" + i * 20 + \")\";\n    })\n    .style(\"font\", \"10px sans-serif\");\n\n  legend.append(\"rect\")\n    .attr(\"x\", 30)\n    .attr(\"y\", 30)\n    .attr(\"width\", 18)\n    .attr(\"height\", 18)\n    .attr(\"fill\", z);\n\n  legend.append(\"text\")\n    .attr(\"x\", 58)\n    .attr(\"y\", 38)\n    .attr(\"dy\", \".35em\")\n    .attr(\"text-anchor\", \"start\")\n    .text(function (d) {\n      return d;\n    });\n\n}\n","    var firstYear = \"2000\";\n    var monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n    $(document).ready(function() {\n\n        $(\"#hero-gr\").hide();\n\n         //Get height of img\n         var heroHeight = $(\"#hero-gc\").height();\n         $(\"#hero\").height(heroHeight);\n\n        $( window ).resize(function() {\n             heroHeight = $(\"#hero-gc\").height();\n             $(\"#hero\").height(heroHeight);\n        });\n\n         //Switch theme button\n         $(\"#button-gc\").click(function(){\n             console.log(\"click\");\n              $(\".gr\").removeClass(\"gr\").addClass(\"gc\");\n              $(\".gr-dark\").removeClass(\"gr-dark\").addClass(\"gc-dark\");\n              $(\"#hero-gr\").fadeOut();\n              $(\"#hero-gc\").fadeIn();\n\n         });\n         $(\"#button-gr\").click(function(){\n             console.log(\"click\");\n              $(\".gc\").removeClass(\"gc\").addClass(\"gr\");\n              $(\".gc-dark\").removeClass(\"gc-dark\").addClass(\"gr-dark\");\n              $(\"#hero-gc\").fadeOut();\n              $(\"#hero-gr\").fadeIn();\n         });\n\n        $(\".handle\").click(function() {\n            $(this).toggleClass(\"slideRight\");\n            $(\".gun-control\").toggleClass(\"hide-gun-control\");\n            $(\".gun-rights\").toggleClass(\"hide-gun-rights\");\n        });\n\n        var gunMoney = \"data/gunOrgSpending.json\";\n\n        var startYear = 2000;\n        var endYear = 2016;\n\n        var gunControlAnnuals = {};\n        var gunRightsAnnuals = {};\n\n        var indices = [\"Gun Control\", \"Gun Rights\"];\n\n        //Array of unique gun orgs\n        var gunOrgs = [];\n\n        var yearData = [];\n\n        for (i = startYear; i <= endYear; i++) {\n             $(\".year-list\").append(\"<li data-selectedYear=\"+i+\">\"+i+\"</li>\");\n          //   if (i == parseInt(firstYear)) {\n          //       $(\"#yearSelector\").append(\"<option value='\" + i + \"' selected>\" + i + \"</option>\");\n          //   } else {\n          //       $(\"#yearSelector\").append(\"<option value='\" + i + \"'>\" + i + \"</option>\");\n          //   }\n        }\n\n        $.getJSON(gunMoney).done(function(data) {\n\n            // Shortcut to groups\n            var gunControl = data.spending[0].gunControl;\n            var gunRights = data.spending[1].gunRights;\n\n            /*---------------------------------------------------------------\n            \t\t\t BUILD ORG FEVERS csv\n            ---------------------------------------------------------------*/\n\n            //Build an array of ALL gun orgs\n            for (i = startYear; i <= endYear; i++) {\n                $.each(gunControl, function(index, value) {\n                    //console.log();\n                    $.each(value, function(index, value) {\n                        gunOrgs.push(value.name);\n                    });\n                });\n                $.each(gunRights, function(index, value) {\n                    //console.log();\n                    $.each(value, function(index, value) {\n                        gunOrgs.push(value.name);\n                    });\n                });\n            }\n\n            //GUN ORG COUNTS\n            gunOrgCounts = _.countBy(gunOrgs);\n\n            //Build top line of gun orgs csv\n            //var csvOrgData = \"year,\";\n            var orgArray = [\"year\"];\n            $.each(gunOrgCounts, function(index, value) {\n                //csvOrgData += index+\",\";\n                orgArray.push(index);\n            });\n            var csvOrgData = orgArray + \"\\n\";\n\n\n\n            /*---------------------------------------------------------------\n            \t\t\t BUILD TREE MAP csv\n            ---------------------------------------------------------------*/\n\n            var csvData = \"id,value\\n\";\n            csvData += \"flare,\\n\";\n\n            for (i = startYear; i <= endYear; i++) {\n\n                //FOR GUN ORG CHART\n                yearArray = [i.toString()];\n\n                csvData += \"flare.\" + i.toString() + \",\\n\";\n                var group1header = false;\n                var group2header = false;\n                //console.log(i);\n                $.each(data.spending, function(index, value) {\n                    if (index === 0) {\n                        group = \"gc\";\n                        //console.log(\"     \"+group);\n                        //console.log(value.gunControl[i.toString()]);\n                        if (!group1header) {\n                            //console.log(\"false: \"+group1header);\n                            csvData += \"flare.\" + i.toString() + \".\" + group + \",\\n\";\n                            $.each(value.gunControl[i.toString()], function(ind, val) {\n                                //console.log(val.name);\n\n                                var orgIndex = $.inArray(val.name,orgArray);\n                                if (parseInt(val.expenditures) > 0){\n                                    yearArray[orgIndex] = val.expenditures;\n                                }\n\n                                csvData += \"flare.\" + i.toString() + \".\" + group + \".\" + val.name + \",\" + val.expenditures + \"\\n\";\n                            });\n                            group1header = true;\n                        }\n                    }\n                });\n                $.each(data.spending, function(index, value) {\n                    if (index === 1) {\n                        group = \"gr\";\n                        //console.log(\"     \"+group);\n                        //console.log(value.gunControl[i.toString()]);\n                        if (!group2header) {\n                            //console.log(\"false: \"+group2header);\n                            csvData += \"flare.\" + i.toString() + \".\" + group + \",\\n\";\n                            $.each(value.gunRights[i.toString()], function(ind, val) {\n                                //console.log(val.name);\n\n                                var orgIndex = $.inArray(val.name,orgArray);\n                                if (parseInt(val.expenditures) > 0){\n                                    yearArray[orgIndex] = val.expenditures;\n                                }\n\n\n                                csvData += \"flare.\" + i.toString() + \".\" + group + \".\" + val.name + \",\" + val.expenditures + \"\\n\";\n                            });\n                            group2header = true;\n                        }\n                    }\n                });\n                //console.log(yearArray);\n                csvOrgData += yearArray+\"\\n\";\n            }\n\n\n            /*---------------------------------------------------------------\n                        BUILD YEAR CHART json\n            ---------------------------------------------------------------*/\n\n            // Loop through every year\n            for (i = startYear; i <= endYear; i++) {\n\n                // Blank object to be pushed into yearData for first chart\n                mainYear = {};\n                mainYear.Year = i;\n\n                // Initialize annual totals to 0\n                gunRightsAnnuals[i] = 0;\n                gunControlAnnuals[i] = 0;\n\n                //console.log(\"    Gun Rights\");\n                gunRights[i.toString()].forEach(function(year) {\n                    //console.log(parseInt(year.expenditures));\n                    gunRightsAnnuals[i.toString()] += parseInt(year.expenditures);\n                });\n\n                //console.log(\"    Gun Control\");\n                gunControl[i.toString()].forEach(function(year) {\n                    //console.log(parseInt(year.expenditures));\n                    gunControlAnnuals[i.toString()] += parseInt(year.expenditures);\n                });\n\n\n\n                mainYear[\"Gun Control\"] = gunControlAnnuals[i.toString()];\n                mainYear[\"Gun Rights\"] = gunRightsAnnuals[i.toString()];\n                mainYear.total = parseInt(gunControlAnnuals[i.toString()]) + parseInt(gunRightsAnnuals[i.toString()]);\n\n                yearData.push(mainYear);\n\n            }\n\n            /*---------------------------------------------------------------\n                        BUILD TOTALS CHART\n            ---------------------------------------------------------------*/\n            var gunControlTotals = 0;\n            var gunRightsTotal = 0;\n\n            $.each(yearData, function(key, val) {\n                gunControlTotals += val[\"Gun Control\"];\n                gunRightsTotal += val[\"Gun Rights\"];\n            });\n\n            buildTotalsChart(gunControlTotals, gunRightsTotal);\n            buildYearChart(yearData);\n            buildOrgChart(csvOrgData);\n            buildTreeChart(csvData);\n\n        });\n\n        // injecting current year into footer\n        // DO NOT DELETE\n\n        var d = new Date();\n        var year = d.getFullYear();\n\n        $('.copyright').text(year);\n\n    });\n"]}